package edu.ndsu.finalProject.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import edu.ndsu.finalProject.cayenne.persistent.Enrollment;

/**
 * Class _Student was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Student extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String STUDENT_ID_PK_COLUMN = "student_id";

    public static final Property<String> BIRTH_DATE = Property.create("birthDate", String.class);
    public static final Property<String> F_NAME = Property.create("fName", String.class);
    public static final Property<String> L_NAME = Property.create("lName", String.class);
    public static final Property<String> RECOMMENDED_LEVEL = Property.create("recommendedLevel", String.class);
    public static final Property<List<Enrollment>> ENROLLMENTS = Property.create("enrollments", List.class);

    public void setBirthDate(String birthDate) {
        writeProperty("birthDate", birthDate);
    }
    public String getBirthDate() {
        return (String)readProperty("birthDate");
    }

    public void setFName(String fName) {
        writeProperty("fName", fName);
    }
    public String getFName() {
        return (String)readProperty("fName");
    }

    public void setLName(String lName) {
        writeProperty("lName", lName);
    }
    public String getLName() {
        return (String)readProperty("lName");
    }

    public void setRecommendedLevel(String recommendedLevel) {
        writeProperty("recommendedLevel", recommendedLevel);
    }
    public String getRecommendedLevel() {
        return (String)readProperty("recommendedLevel");
    }

    public void addToEnrollments(Enrollment obj) {
        addToManyTarget("enrollments", obj, true);
    }
    public void removeFromEnrollments(Enrollment obj) {
        removeToManyTarget("enrollments", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Enrollment> getEnrollments() {
        return (List<Enrollment>)readProperty("enrollments");
    }


}
