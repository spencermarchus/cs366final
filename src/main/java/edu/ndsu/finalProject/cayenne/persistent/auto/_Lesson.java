package edu.ndsu.finalProject.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import edu.ndsu.finalProject.cayenne.persistent.Course;
import edu.ndsu.finalProject.cayenne.persistent.Enrollment;
import edu.ndsu.finalProject.cayenne.persistent.LessonDate;

/**
 * Class _Lesson was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Lesson extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String LESSON_ID_PK_COLUMN = "lesson_id";

    public static final Property<Integer> CAPACITY = Property.create("capacity", Integer.class);
    public static final Property<String> DESCRIPTION = Property.create("description", String.class);
    public static final Property<String> LEVEL = Property.create("level", String.class);
    public static final Property<Course> COURSE = Property.create("course", Course.class);
    public static final Property<List<Enrollment>> ENROLLMENTS = Property.create("enrollments", List.class);
    public static final Property<List<LessonDate>> LESSON_DATES = Property.create("lessonDates", List.class);

    public void setCapacity(int capacity) {
        writeProperty("capacity", capacity);
    }
    public int getCapacity() {
        Object value = readProperty("capacity");
        return (value != null) ? (Integer) value : 0;
    }

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setLevel(String level) {
        writeProperty("level", level);
    }
    public String getLevel() {
        return (String)readProperty("level");
    }

    public void setCourse(Course course) {
        setToOneTarget("course", course, true);
    }

    public Course getCourse() {
        return (Course)readProperty("course");
    }


    public void addToEnrollments(Enrollment obj) {
        addToManyTarget("enrollments", obj, true);
    }
    public void removeFromEnrollments(Enrollment obj) {
        removeToManyTarget("enrollments", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Enrollment> getEnrollments() {
        return (List<Enrollment>)readProperty("enrollments");
    }


    public void addToLessonDates(LessonDate obj) {
        addToManyTarget("lessonDates", obj, true);
    }
    public void removeFromLessonDates(LessonDate obj) {
        removeToManyTarget("lessonDates", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<LessonDate> getLessonDates() {
        return (List<LessonDate>)readProperty("lessonDates");
    }


}
